server:
  port: 8001

spring:
  application:
    name: cloud-payment-service
  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: jdbc:mysql://localhost:3306/cloud2020?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8&autoReconnect=true&failOverReadOnly=false&verifyServerCertificate=false&useSSL=false&allowMultiQueries=true&useAffectedRows=true
      username: root
      password: root123
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 最大连接池数量
      max-active: 20
      # 最小连接池数量
      min-idle: 5
      # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
      max-wait: 60000
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，会存在Oracle下PSCache占用内存过多的问题，可以把这个数据配置大一些，比如100.default=-1
      max-pool-prepared-statement-per-connection-size: -1
      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null,testOnBorrow,testOnBorrow,testOnReturn,testWhileIdle都不会起作用。这个可以不配置
      validation-query: SELECT 1 FROM DUAL
      # 申请连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能。default=true
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。default=false
      test-on-return: false
      # 建议配置为true,不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。default=false
      test-while-idle: true
      # 连接池中的minIdle数据以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。default=false
      keep-alive: true
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 default=1分钟
      #有两个含义：
      # (1)Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接
      # (2)testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 60000
      # 池中的连接保持空闲而不被驱逐的最小时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计
      filter:
        commons-log:
          enabled: true
        stat:
          enabled: true
        wall:
          enabled: true
      # WebStatFilter配置
      web-stat-filter:
        enabled: true
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        principal-cookie-name: admin
        principal-session-name: admin
        session-stat-enable: false
        session-stat-max-count: 1000
        url-pattern: /*
      # 下面配置说明请参考Druid Github Wiki，配置_StatViewServlet配置
      stat-view-servlet:
        enabled: true
        # # 设置可以访问的 ip 地址（多个ip 通过 逗号 进行分割。如果为空，则所有人都可以访问
        ##spring.datasource.druid.stat-view-servlet.allow=192.168.1.2,10.4.23.66,60.205.221.22
        allow: ''
        login-username: hp
        login-password: tiger
# mp
mybatis-plus:
  configuration:
    cache-enabled: false
    # 存储枚举的 索引
    #mybatis-plus.configuration.default-enum-type-handler=org.apache.ibatis.type.EnumOrdinalTypeHandler
    # 存储枚举的 名称
    #mybatis-plus.configuration.default-enum-type-handler=org.apache.ibatis.type.EnumTypeHandler
    # 存储枚举的 @EnumValue注解的值
    default-enum-type-handler: com.baomidou.mybatisplus.extension.handlers.MybatisEnumTypeHandler
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 驼峰下划线转换
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      # 主键类型 AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      # 字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      update-strategy: NOT_EMPTY
      # 逻辑删除字段
      logic-delete-field: del
      # 逻辑已删除值(默认为 1)
      logic-delete-value: 1
      # 逻辑未删除值(默认为 0)
      logic-not-delete-value: 0
  mapper-locations: classpath*:mapper/**/*.xml
  type-enums-package: com.xavier.dong.springcloud.enums
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.xavier.dong.springcloud.entity.po